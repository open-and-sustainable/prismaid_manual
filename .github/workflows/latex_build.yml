name: Build LaTeX PDFs

on:
  push:
    tags:
      - "v*"  # Runs only on version tags (e.g., v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: texlive/texlive:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensure full history and tags are available

      - name: Get latest Git tag
        run: |
          git config --global --add safe.directory /__w/prismaid_manual/prismaid_manual
          git fetch --tags
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Latest tag: $TAG"
          echo "$TAG" > version.tex
          echo "VERSION=$TAG" >> $GITHUB_ENV

      - name: Compile Manual to PDF
        run: |
          xelatex -interaction=nonstopmode prismaid_manual.tex
          xelatex -interaction=nonstopmode prismaid_manual.tex  # Run twice for cross-references

      - name: Mark directory as safe for Git
        run: git config --global --add safe.directory /__w/prismaid_manual/prismaid_manual

      - name: Stash uncommitted changes
        run: git stash --include-untracked

      - name: Fetch latest changes and rebase
        run: |
          git fetch origin
          git pull --rebase origin main

      - name: Pop stashed changes
        run: git stash pop || echo "No stashed changes to pop"

      - name: Commit and Push PDFs
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git checkout main
          git pull --rebase origin main
          git add prismaid_manual.pdf version.tex
          git diff --cached --quiet || git commit -m "Update PDFs and version info for $VERSION"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PDF to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: prismaid_manual.pdf
          tag_name: ${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
